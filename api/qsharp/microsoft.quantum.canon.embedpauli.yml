### YamlMime:QSharpType
uid: microsoft.quantum.canon.embedpauli
name: EmbedPauli
type: function
namespace: Microsoft.Quantum.Canon
summary: Med en qubit Pauli-operator och indexet för en qubit returneras en Pauli-operator med en med en-operator i indexet och `PauliI` vid varje annat index.
examples: >-
  Så här hämtar du matrisen `[PauliI, PauliI, PauliX, PauliI]`:


  ```qsharp

  EmbedPauli(PauliX, 2, 3);

  ```
syntax: 'function EmbedPauli (pauli : Pauli, location : Int, n : Int) : Pauli[]'
input:
  content: '(pauli : Pauli, location : Int, n : Int)'
  types:
  - name: pauli
    summary: En qubit Pauli-operatör som ska placeras på den aktuella platsen.
    isPrimitive: true
    uid: Pauli
  - name: location
    summary: Ett index som `output[location] == pauli`, där `output` är resultatet av den här funktionen.
    isPrimitive: true
    uid: Int
  - name: n
    summary: Längden på matrisen som ska returneras.
    isPrimitive: true
    uid: Int
output:
  content: Pauli[]
  types:
  - isArray: true
    isPrimitive: true
    uid: Pauli
ms.openlocfilehash: 1e852781f6dd85e5432f5613184f028db0e84b87
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: sv-SE
ms.lasthandoff: 10/31/2019
ms.locfileid: "73219390"
