### YamlMime:QSharpType
uid: microsoft.quantum.canon.embedpauli
name: EmbedPauli
type: function
namespace: microsoft.quantum.canon
summary: Med en enda-qubit Pauli-operator och indexet för en qubit returneras en Pauli-operator med en med en-operator med den aktuella indexen och `PauliI` vid alla andra index.
examples: >-
  Så här hämtar du matrisen `[PauliI, PauliI, PauliX, PauliI]` :


  ```qsharp

  EmbedPauli(PauliX, 2, 3);

  ```
syntax: 'function EmbedPauli (pauli : Pauli, location : Int, n : Int) : Pauli[]'
input:
  content: '(pauli : Pauli, location : Int, n : Int)'
  types:
  - name: pauli
    summary: En qubit Pauli-operatör som ska placeras på den aktuella platsen.
    isPrimitive: true
    uid: Pauli
  - name: location
    summary: Ett index som `output[location] == pauli` , där `output` är resultatet av den här funktionen.
    isPrimitive: true
    uid: Int
  - name: n
    summary: Längden på matrisen som ska returneras.
    isPrimitive: true
    uid: Int
output:
  content: Pauli[]
  types:
  - isArray: true
    isPrimitive: true
    uid: Pauli
metadata:
  ms.openlocfilehash: a5a6dbabfe51f52da9eb63d23bfbf1cf7ee03370
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: sv-SE
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89356379"
