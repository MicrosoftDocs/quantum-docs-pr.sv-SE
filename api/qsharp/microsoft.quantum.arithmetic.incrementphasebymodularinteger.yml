### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.incrementphasebymodularinteger
name: IncrementPhaseByModularInteger
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: >-
  Utför en modulär ökning av ett qubit-register med en heltalskonstant.


  Låt oss ange `increment` av ett, `modulus` av N och heltal som är kodat i `target` av y. sedan utför åtgärden följande omvandling: | y ⟩ ↦ | y + a (mod N) ⟩ heltal kodas i formatet litet endian i QFT-basen
remarks: >-
  Förutsätter att `target` har den högsta bit inställningen 0.

  Förutsätter också att målets värde är mindre än N.


  För krets diagrammet och förklaringen, se figur 5 på [sidan 5 i arXiv: Quant-pH/0205095v3](https://arxiv.org/pdf/quant-ph/0205095v3.pdf#page=5).
syntax: 'operation IncrementPhaseByModularInteger (increment : Int, modulus : Int, target : Microsoft.Quantum.Arithmetic.PhaseLittleEndian) : Unit'
input:
  content: '(increment : Int, modulus : Int, target : Microsoft.Quantum.Arithmetic.PhaseLittleEndian)'
  types:
  - name: increment
    isPrimitive: true
    uid: Int
  - name: modulus
    isPrimitive: true
    uid: Int
  - name: target
    uid: microsoft.quantum.arithmetic.phaselittleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- microsoft.quantum.canon.modularincrementle
ms.openlocfilehash: 897e46cca640e714e1f000548ffd3226e8e27fa4
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: sv-SE
ms.lasthandoff: 10/31/2019
ms.locfileid: "73219033"
