### YamlMime:QSharpType
uid: microsoft.quantum.preparation.statepreparationpositivecoefficients
name: StatePreparationPositiveCoefficients
type: function
namespace: Microsoft.Quantum.Preparation
summary: >-
  Returnerar en åtgärd som förbereder angivet Quantum-tillstånd.


  Den returnerade åtgärden $U $ förbereder ett godtyckligt Quantum-tillstånd $ \ket{\psi} $ med positiva koefficienter $ \alpha_j\ge $0 från $n $-qubit beräknings bas tillstånd $ \ket{0...0} $.


  Åtgärden för U i ett nytilldelat register erhålls av $ $ \begin{align} U \ket{0\cdots 0} = \ket{\psi} = \frac{\sum_{j = 0} ^ {2 ^ n-1} \alpha_j \ket{j}}{\sqrt{\sum_{j = 0} ^ {2 ^ n-1} | \alpha_j | ^ 2}}.

  \end{align} $ $
remarks: Negativa ingångs-koefficienter $ \alpha_j < $0 behandlas som om det är positivt med värdet $ | \alpha_j | $. `coefficients` fylls med elementen $ \alpha_j = $0,0 om färre än $2 ^ n $ har angetts.
examples: >-
  Följande kodfragment förbereder Quantum-tillstånd $ \ket{\psi} = \ sqrt {1/8} \ ket{0}+ \ sqrt {7/8} \ ket{2}$ i qubit-registrera `qubitsLE`.


  ```qsharp

  let amplitudes = [Sqrt(0.125), 0.0, Sqrt(0.875), 0.0];

  let op = StatePreparationPositiveCoefficients(amplitudes);

  using (qubits = Qubit[2]) {
      let qubitsLE = LittleEndian(qubits);
      op(qubitsLE);
  }

  ```
syntax: 'function StatePreparationPositiveCoefficients (coefficients : Double[]) : (Microsoft.Quantum.Arithmetic.LittleEndian => Unit is Adj + Ctl)'
input:
  content: '(coefficients : Double[])'
  types:
  - name: coefficients
    summary: Matris med upp till $2 ^ n $ koefficienter $ \alpha_j $. $J $ koefficienten indexerar Number State $ \ket{j} $ kodat i litet endian-format.
    isArray: true
    isPrimitive: true
    uid: Double
output:
  content: (Microsoft.Quantum.Arithmetic.LittleEndian => Unit is Adj + Ctl)
  types:
  - summary: En enhetlig åtgärd för tillstånds förberedelse $U $.
    isOperation: true
    input:
      types:
      - uid: microsoft.quantum.arithmetic.littleendian
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
metadata:
  ms.openlocfilehash: 2a31449781d4b3bab1f2af40083df78bf6cc2083
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: sv-SE
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73226377"
