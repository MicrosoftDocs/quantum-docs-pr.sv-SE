### YamlMime:QSharpType
uid: microsoft.quantum.simulation.blockencodingbylcu
name: BlockEncodingByLCU
type: function
namespace: Microsoft.Quantum.Simulation
summary: >-
  Kodar en operatör av intresse i en `BlockEncoding`.


  Detta skapar en $U `BlockEncoding`-V\cdot = P\cdot P ^ \dagger $ som kodar vissa operatorer $H = \sum_{j} | \alpha_j | U_j $ av intresse som är en linjär kombination av unitaries. Vanligt vis är $P $ en enhetlig tillstånds förberedelse som $P \ket{0}\_a = \ sum_j\sqrt {\ alpha_j/\|\vec\alpha\|\_2} \ket{j}\_a $ och $V = \sum_{j}\ket{j}\bra{j}\_a\otimes U_ j $.
remarks: Den här `BlockEncoding` implementeringen ger den egenskaperna för en `BlockEncodingReflection`.
syntax: "function BlockEncodingByLCU (statePreparation : ('T => Unit is Adj + Ctl), selector : (('T, 'S) => Unit is Adj + Ctl)) : (('T, 'S) => Unit is Adj + Ctl)"
input:
  content: "(statePreparation : ('T => Unit is Adj + Ctl), selector : (('T, 'S) => Unit is Adj + Ctl))"
  types:
  - name: statePreparation
    summary: En enhetlig $P $ som förbereder ett visst mål tillstånd.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
  - name: selector
    summary: En enhetlig $V $ som kodar komponenten unitaries i $H $.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
      - uid: "'S"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
output:
  content: (('T, 'S) => Unit is Adj + Ctl)
  types:
  - summary: En enhetlig $U $ som agerar gemensamt på register `a` och `s` som blockerar-kodar $H $ och uppfyller $U ^ \dagger = U $.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
      - uid: "'S"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
seeAlso:
- microsoft.quantum.canon.blockencoding
- microsoft.quantum.canon.blockencodingreflection
metadata:
  ms.openlocfilehash: b2a107a8497e6fdd24f5d6511d61541ce932ec6c
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: sv-SE
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73227873"
