### YamlMime:QSharpType
uid: microsoft.quantum.canon.applytoeachindexa
name: ApplyToEachIndexA
type: operation
namespace: microsoft.quantum.canon
summary: >-
  Tillämpar en enskild qubit-åtgärd på varje indexerat element i en register.

  Modifieraren `A` anger att en qubit-åtgärd är adjointable.
syntax: "operation ApplyToEachIndexA (singleElementOperation : ((Int, 'T) => Unit is Adj), register : 'T[]) : Unit"
input:
  content: "(singleElementOperation : ((Int, 'T) => Unit is Adj), register : 'T[])"
  types:
  - name: singleElementOperation
    summary: Åtgärd att tillämpa på varje qubit.
    isOperation: true
    input:
      types:
      - isPrimitive: true
        uid: Int
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
  - name: register
    summary: Matris för qubits som den aktuella åtgärden ska tillämpas på.
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
typeParameters:
- uid: "'T"
  summary: Målet som varje åtgärd agerar på.
functors:
- Adjoint
seeAlso:
- microsoft.quantum.canon.applytoeachindex
metadata:
  ms.openlocfilehash: 205ee4d93338aa5983d695d984f87c32c8c6f338
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: sv-SE
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91468813"
