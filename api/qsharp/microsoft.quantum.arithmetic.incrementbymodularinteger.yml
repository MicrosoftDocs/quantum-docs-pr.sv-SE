### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.incrementbymodularinteger
name: IncrementByModularInteger
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: >-
  Utför en modulär ökning av ett qubit-register med en heltalskonstant.


  Låt oss ange `increment` av ett, `modulus` av N och heltal som är kodat i `target` av y. sedan utför åtgärden följande omvandling: \begin{align} \ket{y} \mapsto \ket{y + 1 \operatorname{mod} N} \end{align} heltal kodas i litet endian-format.
remarks: Förutsätter att värdet på målet är mindre än N. Observera att <xref:microsoft.quantum.arithmetic.incrementphasebymodularinteger> implementerar samma åtgärd, men i `PhaseLittleEndian`.
syntax: 'operation IncrementByModularInteger (increment : Int, modulus : Int, target : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
input:
  content: '(increment : Int, modulus : Int, target : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: increment
    summary: Heltals ökning a som ska läggas till i y.
    isPrimitive: true
    uid: Int
  - name: modulus
    summary: Integer N som mods y + a.
    isPrimitive: true
    uid: Int
  - name: target
    summary: Heltals-y i `LittleEndian`-format som `increment` a läggs till i.
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- incrementphasebymodularinteger
ms.openlocfilehash: 9b61ed007a08d176d1754a7c1cd6cd2d9edce7d2
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: sv-SE
ms.lasthandoff: 10/31/2019
ms.locfileid: "73219067"
