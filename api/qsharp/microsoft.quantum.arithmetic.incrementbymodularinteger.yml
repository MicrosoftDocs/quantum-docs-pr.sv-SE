### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.incrementbymodularinteger
name: IncrementByModularInteger
type: operation
namespace: microsoft.quantum.arithmetic
summary: >-
  Utför en modulär ökning av ett qubit-register med en heltalskonstant.


  Låt oss ange `increment` $a $, `modulus` genom att $N $ och Integer som är kodat i `target` $y $.

  Åtgärden utför sedan följande omvandling: \begin{align} \ket{y} \mapsto \ket{(y + a) \operatorname{mod} N} \end{align} heltal kodas i litet endian-format.
remarks: >-
  Förutsätter att det initiala värdet för målet är mindre än $N $ och att ökningen $a $ är mindre än $N $.

  Observera att <xref:microsoft.quantum.arithmetic.incrementphasebymodularinteger> implementera samma åtgärd på `PhaseLittleEndian` grund av.
syntax: 'operation IncrementByModularInteger (increment : Int, modulus : Int, target : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
input:
  content: '(increment : Int, modulus : Int, target : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: increment
    summary: Heltals ökning $a $ som ska läggas till i $y $.
    isPrimitive: true
    uid: Int
  - name: modulus
    summary: Integer $N $ som mods $y + a $.
    isPrimitive: true
    uid: Int
  - name: target
    summary: Integer $y $ i `LittleEndian` formatet som `increment` $a $ läggs till i.
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- microsoft.quantum.arithmetic.incrementphasebymodularinteger
metadata:
  ms.openlocfilehash: 7ea6dde359868fe2b5faf78b478df98de091377f
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: sv-SE
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91477139"
