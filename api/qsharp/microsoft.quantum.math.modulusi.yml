### YamlMime:QSharpType
uid: microsoft.quantum.math.modulusi
name: ModulusI
type: function
namespace: Microsoft.Quantum.Math
summary: Beräknar den kanoniska återstoden av `value` modulo `modulus`.
remarks: 'Den här funktionen fungerar annorlunda för hur operatorn `%` beter sig i C# och Q # som i resultatet alltid är ett positivt heltal mellan 0 och `modulus - 1`, även om värdet är negativt.'
syntax: 'function ModulusI (value : Int, modulus : Int) : Int'
input:
  content: '(value : Int, modulus : Int)'
  types:
  - name: value
    summary: Värdet för vilken restsubstanser beräknas
    isPrimitive: true
    uid: Int
  - name: modulus
    summary: Den modul som rester tar emot måste vara positiva
    isPrimitive: true
    uid: Int
output:
  content: Int
  types:
  - summary: Integer $r $ mellan 0 och `modulus - 1` så att `value - r` är delbar med modulus
    isPrimitive: true
    uid: Int
metadata:
  ms.openlocfilehash: 1bb3877b4d66b5ad09dabbc072d7d9fb61813745
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: sv-SE
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73212097"
