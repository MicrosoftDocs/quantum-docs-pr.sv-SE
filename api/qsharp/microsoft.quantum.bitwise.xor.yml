### YamlMime:QSharpType
uid: microsoft.quantum.bitwise.xor
name: Xor
type: function
namespace: microsoft.quantum.bitwise
summary: >-
  Returnerar den bitvisa uteslutande eller (XOR) av två heltal.

  Detta utför samma beräkning som den inbyggda `^^^` operatorn.
remarks: Mer information finns i [C# ^-operatorn](https://docs.microsoft.com/dotnet/csharp/language-reference/operators/xor-operator) .
examples: >-
  ```qsharp

  let a = 248;       //                 11111000₂

  let b = 63;        //                 00111111₂

  let x = Xor(a, b); // x : Int = 199 = 11000111₂.

  ```
syntax: 'function Xor (a : Int, b : Int) : Int'
input:
  content: '(a : Int, b : Int)'
  types:
  - name: a
    isPrimitive: true
    uid: Int
  - name: b
    isPrimitive: true
    uid: Int
output:
  content: Int
  types:
  - isPrimitive: true
    uid: Int
metadata:
  ms.openlocfilehash: bbd06042f00dc7b1401a38d49b8e6a5855b62556
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: sv-SE
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91473827"
