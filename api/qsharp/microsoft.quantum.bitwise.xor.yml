### YamlMime:QSharpType
uid: microsoft.quantum.bitwise.xor
name: Xor
type: function
namespace: microsoft.quantum.bitwise
summary: >-
  Returnerar den bitvisa uteslutande eller (XOR) av två heltal.

  Detta utför samma beräkning som den inbyggda `^^^` operatorn.
remarks: Mer information finns i [C# ^-operatorn](https://docs.microsoft.com/dotnet/csharp/language-reference/operators/xor-operator) .
examples: >-
  ```qsharp

  let a = 248;       //                 11111000₂

  let b = 63;        //                 00111111₂

  let x = Xor(a, b); // x : Int = 199 = 11000111₂.

  ```
syntax: 'function Xor (a : Int, b : Int) : Int'
input:
  content: '(a : Int, b : Int)'
  types:
  - name: a
    isPrimitive: true
    uid: Int
  - name: b
    isPrimitive: true
    uid: Int
output:
  content: Int
  types:
  - isPrimitive: true
    uid: Int
metadata:
  ms.openlocfilehash: 5df8cd3ce94d5868776955e26797dbbe265b5390
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: sv-SE
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89350956"
