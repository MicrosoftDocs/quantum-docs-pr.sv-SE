### YamlMime:QSharpType
uid: microsoft.quantum.canon.ccontrolledca
name: CControlledCA
type: function
namespace: microsoft.quantum.canon
summary: >-
  Med en åtgärd op returnerar en ny åtgärd som tillämpar op om en klassisk kontroll bit är sann. Om `false` händer ingenting.

  Modifieraren `CA` anger att åtgärden är kontrollerbar och adjointable.
syntax: "function CControlledCA (op : ('T => Unit is Ctl + Adj)) : ((Bool, 'T) => Unit is Ctl + Adj)"
input:
  content: "(op : ('T => Unit is Ctl + Adj))"
  types:
  - name: op
    summary: En åtgärd som ska tillämpas villkorligt.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
output:
  content: ((Bool, 'T) => Unit is Ctl + Adj)
  types:
  - summary: En ny åtgärd som är OP om den klassiska kontroll biten är true.
    isOperation: true
    input:
      types:
      - isPrimitive: true
        uid: Bool
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
typeParameters:
- uid: "'T"
  summary: Indatatypen för den åtgärd som ska tillämpas villkorligt.
seeAlso:
- microsoft.quantum.canon.ccontrolled
metadata:
  ms.openlocfilehash: 8f081115dc7b6223f9fe5d83e5aa02af291cfb4a
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: sv-SE
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91472008"
