### YamlMime:QSharpType
uid: microsoft.quantum.canon.applytoeachca
name: ApplyToEachCA
type: operation
namespace: microsoft.quantum.canon
summary: >-
  Tillämpar en enskild qubit-åtgärd för varje-element i en register.

  Modifieraren `CA` anger att en enskild-qubit-åtgärd är kontrollerbar och adjointable.
examples: >-
  Förbered ett tre-qubit $ \ket{+} $-tillstånd:


  ```qsharp

  using (register = Qubit[3]) {
      ApplyToEach(H, register);
  }

  ```
syntax: "operation ApplyToEachCA (singleElementOperation : ('T => Unit is Adj + Ctl), register : 'T[]) : Unit"
input:
  content: "(singleElementOperation : ('T => Unit is Adj + Ctl), register : 'T[])"
  types:
  - name: singleElementOperation
    summary: Åtgärd att tillämpa på varje qubit.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
  - name: register
    summary: Matris för qubits som den aktuella åtgärden ska tillämpas på.
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
typeParameters:
- uid: "'T"
  summary: Målet som åtgärden agerar på.
functors:
- Adjoint
- Controlled
seeAlso:
- microsoft.quantum.canon.applytoeach
metadata:
  ms.openlocfilehash: 05399f7d8562b95d9dd1321ee384f10c99d3256c
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: sv-SE
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89357722"
