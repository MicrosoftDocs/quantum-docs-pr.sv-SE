### YamlMime:QSharpType
uid: microsoft.quantum.canon.boundc
name: BoundC
type: function
namespace: microsoft.quantum.canon
summary: >-
  Med en matris med åtgärder som agerar på samma indatamängd skapar en ny åtgärd som utför varje åtgärd i följd.

  Modifieraren `C` anger att alla åtgärder i matrisen är kontrollerbara.
examples: >-
  Följande är likvärdiga:


  ```qsharp

  let bound = BoundC([U, V]);

  bound(x);

  ```


  och


  ```qsharp

  U(x); V(x);

  ```
syntax: "function BoundC (operations : ('T => Unit is Ctl)[]) : ('T => Unit is Ctl)"
input:
  content: "(operations : ('T => Unit is Ctl)[])"
  types:
  - name: operations
    summary: En sekvens med åtgärder som ska utföras på en specifik Indatatyp.
    isArray: true
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Controlled
output:
  content: ('T => Unit is Ctl)
  types:
  - summary: En ny åtgärd som utför varje åtgärd i följd av dess inaktuella Indatatyp.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Controlled
typeParameters:
- uid: "'T"
  summary: Målet som varje åtgärd i matrisen agerar på.
seeAlso:
- microsoft.quantum.canon.bound
metadata:
  ms.openlocfilehash: b2aefcaa3ee32b9a29679fbade2fea5dd5567ee3
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: sv-SE
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91472263"
