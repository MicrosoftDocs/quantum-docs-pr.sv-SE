### YamlMime:QSharpType
uid: microsoft.quantum.canon.applytoeach
name: ApplyToEach
type: operation
namespace: Microsoft.Quantum.Canon
summary: Tillämpar en enskild qubit-åtgärd för varje-element i en register.
examples: >-
  Förbered ett tre-qubit $ \ket{+} $-tillstånd:


  ```qsharp

  using (register = Qubit[3]) {
      ApplyToEach(H, register);
  }

  ```
syntax: "operation ApplyToEach (singleElementOperation : ('T => Unit), register : 'T[]) : Unit"
input:
  content: "(singleElementOperation : ('T => Unit), register : 'T[])"
  types:
  - name: singleElementOperation
    summary: Åtgärd att tillämpa på varje qubit.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
  - name: register
    summary: Matris för qubits som den aktuella åtgärden ska tillämpas på.
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
typeParameters:
- uid: "'T"
  summary: Målet som åtgärden agerar på.
seeAlso:
- microsoft.quantum.canon.applytoeachc
- microsoft.quantum.canon.applytoeacha
- microsoft.quantum.canon.applytoeachca
metadata:
  ms.openlocfilehash: 8d04e012f9ee1837b233a7127361027a5bfe7ccd
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: sv-SE
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82670820"
