### YamlMime:QSharpType
uid: microsoft.quantum.math.modulusl
name: ModulusL
type: function
namespace: microsoft.quantum.math
summary: Beräknar de kanoniska resterna av `value` modulo `modulus` .
remarks: 'Den här funktionen fungerar annorlunda för hur operatorn `%` beter sig i C# och Q # som i resultatet är alltid ett positivt heltal mellan 0 och `modulus - 1` , även om värdet är negativt.'
syntax: 'function ModulusL (value : BigInt, modulus : BigInt) : BigInt'
input:
  content: '(value : BigInt, modulus : BigInt)'
  types:
  - name: value
    summary: Värdet för vilken restsubstanser beräknas
    isPrimitive: true
    uid: BigInt
  - name: modulus
    summary: Den modul som rester tar emot måste vara positiva
    isPrimitive: true
    uid: BigInt
output:
  content: BigInt
  types:
  - summary: Heltal $r $ mellan 0 och `modulus - 1` som `value - r` är delbar med modulus
    isPrimitive: true
    uid: BigInt
metadata:
  ms.openlocfilehash: 4f99741fcb65081a1ddeba96737a95b2fd1a40a1
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: sv-SE
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91478009"
