### YamlMime:QSharpType
uid: microsoft.quantum.canon.multiplexz
name: MultiplexZ
type: operation
namespace: Microsoft.Quantum.Canon
summary: >-
  Använder en Pauli Z-rotation i en matris med qubits.


  Detta tillämpar den multiplicering-kontrollerade enhetliga åtgärden $U $ som utför rotationer efter vinkeln $ \theta_j $ om Single-qubit Pauli-operatorn $Z $ när den styrs av $n $-qubit Number State $ \ket{j} $.


  $U = \sum ^ {2 ^ n-1} _ {j = 0} \ket{j}\bra{j}\otimes e ^ {i Z \theta_j} $.
remarks: '`coefficients` fylls med elementen $ \theta_j = $0,0 om färre än $2 ^ n $ har angetts.'
syntax: 'operation MultiplexZ (coefficients : Double[], control : Microsoft.Quantum.Arithmetic.LittleEndian, target : Qubit) : Unit'
references: '- Syntes av Quantum Logic-kretsar Vivek V. Shende, Stephen S. Bullock, Igor L. Markov https://arxiv.org/abs/quant-ph/0406176'
input:
  content: '(coefficients : Double[], control : Microsoft.Quantum.Arithmetic.LittleEndian, target : Qubit)'
  types:
  - name: coefficients
    summary: Matris med upp till $2 ^ n $ koefficienter $ \theta_j $. $J $ koefficienten indexerar Number State $ \ket{j} $ kodat i litet endian-format.
    isArray: true
    isPrimitive: true
    uid: Double
  - name: control
    summary: $n $-qubit Control register som kodar nummer tillstånden $ \ket{j} $ i litet endian-format.
    uid: microsoft.quantum.arithmetic.littleendian
  - name: target
    summary: Enda qubit-register som roteras av $e ^ {i P \theta_j} $.
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 7098b849ea730b46b4cc3039520ef2b040d43d34
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: sv-SE
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73222705"
