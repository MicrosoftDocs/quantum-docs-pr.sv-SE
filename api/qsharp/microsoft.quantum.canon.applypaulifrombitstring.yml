### YamlMime:QSharpType
uid: microsoft.quantum.canon.applypaulifrombitstring
name: ApplyPauliFromBitString
type: operation
namespace: Microsoft.Quantum.Canon
summary: Använder en Pauli-operator för varje qubit i en matris om motsvarande bit i en boolesk matris matchar ett angivet inflöde.
remarks: Den booleska matrisen och Quantum-registret måste vara lika långa.
syntax: 'operation ApplyPauliFromBitString (pauli : Pauli, bitApply : Bool, bits : Bool[], qubits : Qubit[]) : Unit'
input:
  content: '(pauli : Pauli, bitApply : Bool, bits : Bool[], qubits : Qubit[])'
  types:
  - name: pauli
    summary: Pauli-operatör som ska `qubits[idx]` gälla för var`bitsApply == bits[idx]`
    isPrimitive: true
    uid: Pauli
  - name: bitApply
    summary: Använd Pauli om biten är det här värdet
    isPrimitive: true
    uid: Bool
  - name: bits
    summary: Booleskt register som anger vilka motsvarande qubit `qubits` i som ska användas
    isArray: true
    isPrimitive: true
    uid: Bool
  - name: qubits
    summary: Quantum register som den angivna Pauli-operatorn ska tillämpas på selektivt
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 5a65ec2aae17a1469e820e8cd14a0d50d0639015
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: sv-SE
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82672434"
