### YamlMime:QSharpType
uid: microsoft.quantum.preparation.preparequbit
name: PrepareQubit
type: operation
namespace: microsoft.quantum.preparation
summary: >-
  Förbereder en qubit i eigenstate + 1 ( `Zero` ) för den aktuella Pauli-operatorn.

  Om identitets operatören anges förbereds qubit i blandat läge för maximally.


  Om qubit inlednings vis i $ \ket {0} $-tillstånd, förbereder den här åtgärden qubit i $ + $1-eigenstate för en specifik Pauli-operatör, eller, för `PauliI` , i maximally blandat tillstånd i stället (se <xref:microsoft.quantum.preparation.preparesinglequbitidentity> ).


  Om qubit har varit i ett annat tillstånd än $ \ket {0} $, tillämpar den här åtgärden följande portar: $H $ för `PauliX` , $HS $ för `PauliY` , $I $ för `PauliZ` och <xref:microsoft.quantum.preparation.preparesinglequbitidentity> `PauliI` .
syntax: 'operation PrepareQubit (basis : Pauli, qubit : Qubit) : Unit'
input:
  content: '(basis : Pauli, qubit : Qubit)'
  types:
  - name: basis
    summary: En Pauli-operatör $P $.
    isPrimitive: true
    uid: Pauli
  - name: qubit
    summary: En qubit som ska förberedas.
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
metadata:
  ms.openlocfilehash: 6cfbd44b4e7d89bce6b95517f5e9cf8ec9384c6f
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: sv-SE
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91485523"
