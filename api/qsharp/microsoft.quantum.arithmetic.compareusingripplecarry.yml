### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.compareusingripplecarry
name: CompareUsingRippleCarry
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: >-
  Den här åtgärden testar om ett heltal som representeras av ett register över qubits är större än ett annat heltal, och använder en XOR av resultatet på en qubit.


  Den här åtgärden kontrollerar `x` om `y` det finns två heltal och lagras i qubit-register med samma storlek `x > y`. Om värdet är True är 1 XORed till en qubit för utdata. Annars är 0 XORed till en qubit för utdata.

  Med andra ord kan den här åtgärden representeras av den enhetliga $ $ \begin{align} U\ket {x} \ ket {y} \ ket {z} = \ket{x}\ket{y}\ket{z\oplus (x>y)}.

  \end{align} $ $
syntax: 'operation CompareUsingRippleCarry (x : Microsoft.Quantum.Arithmetic.LittleEndian, y : Microsoft.Quantum.Arithmetic.LittleEndian, output : Qubit) : Unit'
references: '- En ny Quantum krusning-tillsatsering-krets Stefan A. Cuccaro, Thomas G. Draper, Samuel A. Kutin, David Petrie Moultonhttps://arxiv.org/abs/quant-ph/0410184'
input:
  content: '(x : Microsoft.Quantum.Arithmetic.LittleEndian, y : Microsoft.Quantum.Arithmetic.LittleEndian, output : Qubit)'
  types:
  - name: x
    summary: Det första talet som ska jämföras `LittleEndian` lagrade i format i ett qubit-register.
    uid: microsoft.quantum.arithmetic.littleendian
  - name: y
    summary: Det andra talet som ska jämföras `LittleEndian` lagrade i ett qubit-register.
    uid: microsoft.quantum.arithmetic.littleendian
  - name: output
    summary: Qubit som lagrar resultatet av jämförelsen $x>y $.
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 08cff4d874060fce0b461c7eeadfdcadf6fa1453
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: sv-SE
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82679767"
