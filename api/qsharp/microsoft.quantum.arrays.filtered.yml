### YamlMime:QSharpType
uid: microsoft.quantum.arrays.filtered
name: Filtered
type: function
namespace: Microsoft.Quantum.Arrays
summary: Med tanke på en matris och ett predikat som har definierats för elementen i matrisen, returnerar en matris som består av de element som uppfyller predikatet.
remarks: Funktionen definieras för generiska typer, d.v.s. När vi har en matris `'T[]` och ett predikat `'T -> Bool` kan vi filtrera element.
examples: >-
  Följande kod visar funktionen "filtrerad".

  Ett predikat definieras med @"microsoft.quantum.logical.greaterthani" funktionen:


  ```qsharp

  open Microsoft.Quantum.Arrays;

  open Microsoft.Quantum.Logical;


  function FilteredDemo() : Unit {
     let predicate = GreaterThanI(_, 5);
     let filteredArray = Filtered(predicate, [2, 5, 9, 1, 8]);
     Message($"{filteredArray}");
  }

  ```


  Resultatet ett bör förvänta sig från det här exemplet är en matris med tal som är större än 5.
syntax: "function Filtered (predicate : ('T -> Bool), array : 'T[]) : 'T[]"
input:
  content: "(predicate : ('T -> Bool), array : 'T[])"
  types:
  - name: predicate
    summary: En funktion från `'T` till boolesk som används för att filtrera element.
    isFunction: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Bool
  - name: array
    summary: En matris med element över `'T`.
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: "'T[]"
  types:
  - summary: En matris `'T[]` med element som uppfyller predikatet.
    isArray: true
    uid: "'T"
    isLocal: true
typeParameters:
- uid: "'T"
  summary: Typ av `array` element.
metadata:
  ms.openlocfilehash: 6aa19a279425672675182f3c8098e7c47fb5cce6
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: sv-SE
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82676454"
